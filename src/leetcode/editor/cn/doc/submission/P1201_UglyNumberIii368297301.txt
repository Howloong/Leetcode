    class Solution {
        public int nthUglyNumber(int n, int a, int b, int c) {
            int x = 1, y = 1, z = 1;
            int l = 1, m = 1, o = 1;
            int index = 1;
            int sum = 0;
            HashSet<Integer> hashSet = new HashSet<>();
            while (hashSet.size() < n) {
                int t1 = l * a;
                int t2 = m * b;
                int t3 = o * c;
                int res = Math.min(Math.min(t1, t2), t3);
                if (res == t1) {
                    l++;
                } else if (res == t2) {
                    m++;
                } else {
                    o++;
                }
                if (!hashSet.contains(res)) {
                    sum = res;
                    hashSet.add(res);
//                    System.out.println(sum);
                }
            }
            return sum;
        }

    }

//runtime:N/A
//memory:N/A
//total_testcases:53
//total_correct:3
//input_formatted:1000000000
2
217983653
336916467
//expected_output:1999999984
//code_output:
//runtime_error:
//last_testcase:1000000000 2 217983653 336916467
