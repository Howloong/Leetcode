/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSubtree(TreeNode root, TreeNode subRoot) {
        return preOrder(root, subRoot);
    }

    public boolean preOrder(TreeNode p, TreeNode q) {
        if (p == null) {
            return false;
        }
        if (compare(p, q)) {
            return true;
        }
        return preOrder(p.left, q) || preOrder(p.right, q);
    }

    public boolean compare(TreeNode p, TreeNode q) {
        if (p == null && q == null) {
            return true;
        }
        if (p != null && q == null) {
            return false;
        }
        if (p == null && q != null) {
            return false;
        }
        if (p.val != q.val) {
            return false;
        }
        return compare(p.left, q.left) && compare(p.right, q.right);
    }

}

//runtime:2 ms
//memory:41.4 MB
