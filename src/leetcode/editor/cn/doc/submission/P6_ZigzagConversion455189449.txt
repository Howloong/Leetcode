    class Solution {
        public String convert(String s, int numRows) {
            if (numRows == 1) {
                return s;
            }
            char[] chars = s.toCharArray();
            int t = 2*numRows - 2;
            int length = s.length();
            StringBuilder sb = new StringBuilder(length);
            int idx = 0;
            while (idx < chars.length) {
                sb.append(chars[idx]);
                idx += t;
            }
            int row = 1;
            idx = row;
            int mid = t - 1;
            int temp = mid;
            while (row < numRows - 1) {
                idx = row;
                temp = mid;
                while (idx < length) {
                    sb.append(chars[idx]);
                    idx += t;
                    if (temp < length) {
                        sb.append(chars[temp]);
                        temp += t;
                    }
                }
                row++;
                mid--;
            }
            idx = numRows - 1;
            while (idx < length) {
                sb.append(chars[idx]);
                idx += t;
            }
            return sb.toString();
        }
    }

//runtime:2 ms
//memory:42.5 MB
