
    /**
     * Definition for a binary tree node.
     * public class TreeNode {
     * int val;
     * TreeNode left;
     * TreeNode right;
     * TreeNode() {}
     * TreeNode(int val) { this.val = val; }
     * TreeNode(int val, TreeNode left, TreeNode right) {
     * this.val = val;
     * this.left = left;
     * this.right = right;
     * }
     * }
     */
    class Solution {
        public TreeNode removeLeafNodes(TreeNode root, int target) {
            return postOrder(root, target);
        }


        public TreeNode postOrder(TreeNode node, int target) {
            if (node.left == null && node.right == null) {
                if (node.val == target)
                    return null;
                return node;
            }
            if (node.left != null)
                node.left = postOrder(node.left, target);
            if (node.right != null)
                node.right = postOrder(node.right, target);
            if (node.val == target && node.left == null && node.right == null) {
                return null;
            }
            return node;
        }
    }

//runtime:0 ms
//memory:41.7 MB
