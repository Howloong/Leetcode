
    /**
     * Definition for singly-linked list.
     * public class ListNode {
     * int val;
     * ListNode next;
     * ListNode() {}
     * ListNode(int val) { this.val = val; }
     * ListNode(int val, ListNode next) { this.val = val; this.next = next; }
     * }
     */
   

    class Solution {
        public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
            ListNode pre = new ListNode();
            ListNode p = pre;
            int flag = 0;
            while (l1 != null || l2 != null) {
                int sum = ((l1 == null ? 0 : l1.val) + (l2 == null ? 0 : l2.val) + flag) >= 10 ?
                        ((l1 == null ? 0 : l1.val) + (l2 == null ? 0 : l2.val) - 10 + flag) :
                        ((l1 == null ? 0 : l1.val) + (l2 == null ? 0 : l2.val) + flag);
                flag = ((l1 == null ? 0 : l1.val) + (l2 == null ? 0 : l2.val) + flag) / 10;
                p.next = new ListNode(sum);
                p = p.next;
                if (l1 != null) {
                    l1 = l1.next;
                }
                if (l2 != null) {
                    l2 = l2.next;
                }

            }
            if (flag == 1) {
                p.next = new ListNode(1);
            }
            return pre.next;
        }

    }

//runtime:2 ms
//memory:38.4 MB
