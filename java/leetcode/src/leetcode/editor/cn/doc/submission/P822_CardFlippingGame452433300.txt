    class Solution {
        public int flipgame(int[] fronts, int[] backs) {
            Set<Integer> set = new HashSet<>();
            for (int i = 0; i < fronts.length; i++) {
                if (fronts[i] == backs[i]) {
                    set.add(fronts[i]);
                }
            }
            int res = Integer.MAX_VALUE;
            for (int i = 0; i < fronts.length; i++) {
                if (fronts[i] == backs[i]) {
                    continue;
                }
                if (!set.contains(fronts[i])) {
                    res = Math.min(res, fronts[i]);
                }
                if (!set.contains(backs[i])) {
                    res = Math.min(res, backs[i]);
                }
            }
            return res == Integer.MAX_VALUE ? 0 : res;
        }
    }

//runtime:2 ms
//memory:42.7 MB
