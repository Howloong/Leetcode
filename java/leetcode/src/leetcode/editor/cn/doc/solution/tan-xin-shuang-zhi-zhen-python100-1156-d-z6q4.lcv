> Problem: [1156. 单字符重复子串的最大长度](https://leetcode.cn/problems/swap-for-longest-repeated-character-substring/description/)

[TOC]

# 思路

贪心双指针，找到第一次和第二次不同于text[l]的位置，然后分类讨论计算，可快速实现：

![image.png](https://pic.leetcode.cn/1685749338-GWhLuS-image.png)

# Code

python双百：

时间28 ms击败100%；内存13.2 MB击败100%

* []

```Python
class Solution(object):
    def maxRepOpt1(self, text):
        l, n, ans = 0, len(text), 0
        while l < n:
            r = l + 1
            while r < n and text[r] == text[l]: r += 1   # 找第一个不同于text[l]的位置
            if r == n: return max(ans, r - l + (text[l] in text[:l]))                                     # 已到字符串结尾，计算处理
            l_ = r
            r += 1
            while r < n and text[r] == text[l]: r += 1   # 找第二个不同于text[l]的位置
            if r - l > ans: ans = max(ans, r - l - (text[l] not in text[:l] and text[l] not in text[r:])) # 计算处理
            l = l_
        return ans        
```

**您若还有不同方法，欢迎贴在评论区，一起交流探讨！ ^_^**

**↓ 点个赞，点收藏，留个言，再划走，感谢您支持作者！ ^_^**

