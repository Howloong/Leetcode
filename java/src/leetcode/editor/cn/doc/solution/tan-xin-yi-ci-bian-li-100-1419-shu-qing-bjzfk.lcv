> Problem: [1419. 数青蛙](https://leetcode.cn/problems/minimum-number-of-frogs-croaking/description/)

[TOC]

# 思路

**第一步、开辟一个数组lst[5]，分别对应叫唤到'c'、'r'、'o'、'a'、'k'的青蛙数量**

**第二步、贪心思路，一次遍历croakOfFrogs的每个字符**

![image.png](https://pic.leetcode.cn/1683308409-CPBpMm-image.png)

**第三步、遍历结束后，判断返回**

![image.png](https://pic.leetcode.cn/1683307830-ZHAPeS-image.png)

# Code

代码直截了当写出，不做花俏的优化，便于一目了然看清逻辑关系：

时间4 ms击败100%；内存6.4 MB击败87.50%

* []

```C
int minNumberOfFrogs(char * croakOfFrogs){
    int lst[5] = {0};
    for ( ; *croakOfFrogs; ++ croakOfFrogs )
        switch (*croakOfFrogs){
            case 'c':
                if (lst[4])  -- lst[4]; ++ lst[0];
                break;
            case 'r':
                if (lst[0]) {-- lst[0]; ++ lst[1];}
                else return -1;
                break;
            case 'o':
                if (lst[1]) {-- lst[1]; ++ lst[2];}
                else return -1;
                break;
            case 'a':
                if (lst[2]) {-- lst[2]; ++ lst[3];}
                else return -1;
                break;
            case 'k':
                if (lst[3]) {-- lst[3]; ++ lst[4];}
                else return -1;
                break;  
        }   
    return lst[0] == 0 && lst[1] == 0 && lst[2] == 0 && lst[3] == 0 ? lst[4] : -1;
}
```

* []

```Python
class Solution:
    def minNumberOfFrogs(self, croakOfFrogs: str) -> int:
        lst = [0] * 5
        for ch in croakOfFrogs:
            if ch == 'c':               
                if lst[4]: 
                    lst[4] -= 1
                lst[0] += 1                 
            elif ch == 'r':
                if lst[0]: 
                    lst[0] -= 1
                    lst[1] += 1
                else:
                    return -1
            elif ch == 'o':
                if lst[1]: 
                    lst[1] -= 1
                    lst[2] += 1
                else:
                    return -1         
            elif ch == 'a':
                if lst[2]: 
                    lst[2] -= 1
                    lst[3] += 1
                else:
                    return -1
            elif ch == 'k':
                if lst[3]: 
                    lst[3] -= 1
                    lst[4] += 1
                else:
                    return -1
        return -1 if any(lst[:4]) else lst[4]
```

**您若还有不同方法，欢迎贴在评论区，一起交流探讨！ ^_^**

**↓ 点个赞，点收藏，再划走，感谢您支持作者！ ^_^**
