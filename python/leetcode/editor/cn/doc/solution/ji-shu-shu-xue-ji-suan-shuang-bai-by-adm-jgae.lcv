> Problem: [447. 回旋镖的数量](https://leetcode.cn/problems/number-of-boomerangs/description/)

[TOC]

# 思路

计数，数学计算。

# Code

执行用时分布272ms击败100.00%；消耗内存分布16.11MB击败100.00%

* []

```C
int cmp(const void *a, const void *b) {
    return *(int *)a - *(int *)b;
}
int numberOfBoomerangs(int** points, int pointsSize, int* pointsColSize){
    int ans = 0, * lst = (int *)calloc(1, sizeof(int) * (pointsSize + 1)); lst[pointsSize] = 9E8;
    for (int i = 0; i < pointsSize; ++ i) {
        for (int j = 0; j < pointsSize; ++ j) 
            lst[j] = pow(points[i][0] - points[j][0], 2) + pow(points[i][1] - points[j][1], 2);
        qsort(lst, pointsSize, sizeof(int), cmp);
        for (int l = 1, r = 2; r <= pointsSize; ++ r) 
            if (lst[l] != lst[r]) 
                ans += (r - l) * (r - l - 1), l = r;
    }
    return ans;
}
```

* []

```Python
class Solution:
    def numberOfBoomerangs(self, points: List[List[int]]) -> int:
        dct = {tuple(p) : defaultdict(int) for p in points}
        for (x1, y1), (x2, y2) in combinations(points, 2):
            d = (x1 - x2) ** 2 + (y1 - y2) ** 2
            dct[(x1, y1)][d] += 1
            dct[(x2, y2)][d] += 1
        return sum(sum(v * (v - 1) for v in d.values()) for d in dct.values())
```

**您若还有不同方法，欢迎贴在评论区，一起交流探讨！ ^_^**

**↓ 点个赞，点收藏，留个言，再划走，感谢您支持作者！ ^_^**
