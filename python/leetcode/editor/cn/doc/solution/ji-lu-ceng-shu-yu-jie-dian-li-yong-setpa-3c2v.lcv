> Problem: [993. 二叉树的堂兄弟节点](https://leetcode.cn/problems/cousins-in-binary-tree/description/)

[TOC]

# 思路

> 讲述看到这一题的思路

# 解题方法

> 描述你的解题方法

# 复杂度

时间复杂度:

> 添加时间复杂度, 示例： $O(n)$

空间复杂度:

> 添加空间复杂度, 示例： $O(n)$

# Code

* []

```C++
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    set<TreeNode*>s;
    int h1,h2;
    void pre_order(TreeNode* root,int x,int y,int k)
    {
        if(root == nullptr) return;
        if((root->left&& root->left->val ==x) || (root->right && root->right->val == x)) s.insert(root),h1 =k;
        if((root->left&& root->left->val ==y) || (root->right && root->right->val == y)) s.insert(root),h2 = k;
        pre_order(root->left,x,y,k + 1);
        pre_order(root->right,x,y,k + 1);

    }
    bool isCousins(TreeNode* root, int x, int y) {
        pre_order(root,x,y,0);
        if(s.size() != 1 && (h1 == h2)) return true;
        return false;
    }
};
```

