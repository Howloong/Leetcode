
    /**
     * Definition for a binary tree node.
     * public class TreeNode {
     * int val;
     * TreeNode left;
     * TreeNode right;
     * TreeNode() {}
     * TreeNode(int val) { this.val = val; }
     * TreeNode(int val, TreeNode left, TreeNode right) {
     * this.val = val;
     * this.left = left;
     * this.right = right;
     * }
     * }
     */
    class Solution {
        public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
            List<List<Integer>> result = new ArrayList<>();
            if (root == null) {
                return result;
            }
            List<Integer> path = new ArrayList<>();
            getPath(root, 0, targetSum, result, path);
            return result;
        }

        public void getPath(TreeNode p,int sum, int target, List<List<Integer>> result, List<Integer> path) {
            if (p.left == null && p.right == null) {
                if (sum + p.val == target) {
                    path.add(p.val);
                    result.add(new ArrayList<>(path));
                    path.remove(path.size() - 1);
                    return;
                }
            }
            if (p.left != null) {
                path.add(p.val);
                getPath(p.left, sum + p.val, target, result, path);
                path.remove(path.size() - 1);
            }
            if (p.right != null) {
                path.add(p.val);
                getPath(p.right, sum + p.val, target, result, path);
                path.remove(path.size() - 1);
            }
        }
    }

//runtime:1 ms
//memory:41.9 MB
